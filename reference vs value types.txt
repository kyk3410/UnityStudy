Built-In Types:
bool byte sbyte char decimal double float int uint long ulong object shor ushort string

class(reference type)
struct(value type)

class Point{
       public float x;
       public float y;

       public Point(float x, float y)
       {
	this.x = x;
	this.y = y;
       }
}

void SomeMethod(){
      Point a = new Point(2, 5); ------> x = 10 y =5
      Point b = a;
      b.x = 10; // 이렇게 하면 이제 RAM에 x는 10이된다
      b = new Point (10, 5); // 이렇게 되면 새로운 객체가 생성된다, 그럼 메모리에서 b지점을 대신 참조한다
      └------ x = 10 y = 5 -> x = 11 y = 5
      bool pointsAreTheSame = a.Equals(b); // Point a와 Point b가 같은지의 여부를 저장하기 위한 bool pointAreTheSame 을 만들어준다
      MovePointOneUnitRight(b); //메소드를 호출하면 메소드 내부의 변수 'c'가 메모리에서 b와 동일한 위치를 참조하고 x 값을 11로 증가 시킨다
}

RAM
x=2 y=5

이렇게 좌표 (2,5)를 수행하면 
x와 y 값을 저장하는 컴퓨터 메모리 변수 'a' 참조를 저장한다


참조 유형을 사용하면 값이 중요하지 않다, 중요한 것은 변수는 메모리에서 동일한 위치를 참조하고 있으며 현재는 그렇지 않다
bool 값은 false이다

다음은
void MovePointOneUnitRight(Point c){
      //c.x += 1;
      c = new Point (c.x + 1, c.y); // 메모리에 변수 c만 참조하는 새 Point객체를 메모리에 만든다
}
// b 경우의 x 좌표는 메소드를 호출 한 후에 변경되지 않는다. x가 10으로 남아있다


// 'ref'키워드

MovePointOneUnitRight(ref b);
void MovePointOneUnitRight(ref Point c)
