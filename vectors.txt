위치,속도 및 방향과 같은 것을 저장하는 데 사용하는 Vector 구조체

우리가 3차원 공간에서 작업 할 때 벡터를 정의하기 위해서는 x축, y축, z축의 세 값이 필요하며 이것을 Vector3라고 부른다.
2D공간에서 작업하면서 더 이상 z축을 필요로하지 않을 때 vector2를 대신 사용할 수 있다

벡터에 대해 간단하게 보면 x값이 -4이고 y값이 3인 Vector2를 정의한다고 가정 해본다, Vector의 일반적인 정의에서는 방향이 있는 양으로 나타낸다
크기, 또는 다른 용어로도 사용할 수 있다, 피타고라스의 정리를 사용하여 이 크기를 계산할 수 있다
이 경우 크기는 sqrt(-4^2 + 3^2)와 같다, 벡터의 방향을 계산하려면 벡터를 정규화해야 한다.
이렇게 하려면 x와 y값을 크기로 나누면된다 그래서 -4/5 = -.8, 그리고 3/5 = .6;  
방금 한 일의 중요성은 이 방향의 크기를 계산하면 sqrt(-.8^2+ .6^2); 1의 값을 얻을 것이다.
왜 이것이 중요한지에 대한 실질적인 예로서, 플레이어의 입력에서 vector2를 생성한다고 가정 해보자
Imagine the player is holding down the left and up key, so we have an input vector (-1;1)
이제 플레이어 오브젝트를 그 방향으로 3 단위 거리만큼 이동시키고 싶다고 말하면, 그래서 이 입력 벡터에 3을 곱해서 우리에게 -3;3)을 준다
그런 다음 플레이어 개체를 x축에서 -3단위, y축에서 3단위 이동한다, 그러나 플레이어가 움직인 거리를 측정하면 의도 한 3대신에 4.2정도라는 것을 알 수 있다
우리가 실수 한 결과로 플레이어는 대각선으로 이동할 때 더 빨리 움직일 수 있었다, 그리고 쉽게 실수를 하기 때문에 벡터를 방향으로 다루려면 먼저 벡터를 정규화해야된다
정규화 된 벡터를 단위 원의 내부에 완벽하게 맞추는 것이 도움이된다는 것을 알수있다